Code object: <module>
Filename: source.py
First line: 1
Constants:
  0
  ('sha256',)
  None
    Code object: check
    Filename: source.py
    First line: 4
    Constants:
      None
      'COMPFEST17{'
      '_'
      10
      '}'
      'yesss!!! heres your flag: '
      'lime'
      ('text', 'fg')
      '2sYvjWMlXF73bRUOHeTVnZ8gquP9Dtd0cxEp5raJKoI4SyNA6hfwmiGLBzkQ1C'
      ('4LAKsvB\x02\x10tPGYCQVk\x06n2\x1c\x10\x11Zl\x05\x10U\x06ehNjmycuH8Mbz7rFRxoOE\x11fD9aqS5i1Ww\x1eJg36X\x16TpI0', 'gljrHw\x035Dc\x16GTzU49F7IniObX\x01oY\x13m\x14x6aRQWqk\x12M0Z\x16yCK81ePVvd\x04tpAJ\x0cSE\x18LsfhuB\x0e\x1b2N', 'qiW5MbaOEGI\x0flerU\x07oJn\x01\x17kKS3QD\x15hYCVst96FmAd\x0cwLuv\x002xRPX\x19\x13yf\x19\x157j4ZT\x02B1gp8zN0H', 'eTk350Fj\x02OR\x16wYPlxzpU\x17\x121Z\x0bXc84VHrmI2y\x1b\x0faAG\x06LdWNSi\x0fsCDu9M\x12hn\x12gqtKbBv\x1eEQf7J6', 'K\x1bGPaj9\nloF5w8DO\x18qI\x05LiZe\x03v\tR21\x0f\x08YzcCyVp6W\x0ebNXxB3AJkEQSug\x03sM\x07rn\x1dTf4d0Hht7U', 'DrAUWfsoPwnBJQbEzhMYH\x1bTlvG579RS3jcIa\x0f\x0eudO\x0fF\x12eV\x1702\x11CN\x008t\x021mXxLy4\x05qkK\x1b\ri6gZ', '\x15xKDwaU3705Qo8\x1a\x1bgvhBT2VR\x0bINPk\x02\x11JtcG4OCqMj\x0e\x04e9i\x1asflu\x1bYymEdSb\rzXLW\x036HpFAZrn', '87xEb\x11\x0fmQp\rP\x0cGfDg\x18qdy6X4RU01u\x13ztsic\x105n\x0fOv\x0f\x1dkeZFwT9oMCBYVA\x1cr2\x0bHSJjIaW3hKLN', 'wO\t\x14\x17rx5KzD\x04dRvF\x196\x1bMyaAXqfGl1tTs4\x12o78nLBCSVYhJ9UgjNu3cE\x14ZbW\x1aQ20mkHIi\x19p\x1e\x1dP', '6\x08\x16q0oje\x05a9PKYCTb\x0f\x1bO\x045JgfwQi4D\x1b2h3HzvElBZLskxFnd8WIA\x0e\x05MS\x03uRpXmG1VNcy\x19\x1c7tU', '7Mi\x18\x01lqugN\t\x0bVC\x0c\x01KoQ\x18vAH\x0bOB29c1\x1d0hrd\x12jwRTaYXIGUFfmzEL6kS8yne53bPJWDxZ\x0ft\rp4', 'RcVWC\x19\x1cxDd9v7L2kS4\x14f0Im\x1agqst\x15\x10\x0ebBny86rh\x10wl\x1dHOa5NpQjUuKEeTzA1\x0cYXMFP\x1bJoiG3\x00Z', '5ch\x02e\x15I\x04KNrQVu\x00OmYG8F\x13n\x1cdgAED\x1dtpz0fTBWUCS\x07wv9bklyXP\x17RL\x0fMZH3qsa1\x1cxj\x0b672oiJ', 'U\x01P\x14znLCeX\x11kJ6NEv\x1eD\nQfKYow\nidl742c\x05h5Z\x10jMW\x11bS8gyR1qtOGF\nxpT9Bu\x07s3H\x1d0IVmaA', '\x07dwezE8SUaCl\x15bmIWfsLY6vM\x05c\x02tDK\x13nP\x1cOGZ4jhp\x00Xk0Txo\x1byB9RA15F\x00JV\x042qguNr7\x08HiQ\x13', 'AH\x01BgpyC7uT\n24\x17P5KM\x18\x1do36hQV\x02a\x03bvNW9cJzRZIqF\x06\x12EmfY1esX\x0f\x0e8irj\tLwlUnGDdSxkt0O', '9\x19\x070ymL\x14xlvJ\x0fh4\x13ZB8tRHfwpFEeMCo37qdgkQ\x17cWUj1\x11\x1eIzK6X5\x01iaTY\x1brOPNb2SGs\x13\x0cVAuD', '\r1OZ\x01cn\x16Cdfxeo2SFJ9s3iUvzaYX7\x198DhTL\x1bmBGprNAPEMVw5q4kg\nlu\x1dRKyI\r\x05bjWt\x176H\x01Q\x19', 'V\x01R\x13bQo8\n\x060hmdZ\nAKu7N1fP\x03EX\rIsBGxjiM3ary5\x16WqD2\x07zJ9\nvlnwc\x12kYg\x066COeTpHSFUL4', 'csrl\x13P\x1c\x1azJ0\x1aMtRdBuVCFw\x18OW\x0eofYm\x1e\x0b4L\x1b32\x108TAIkx\x19hqg6DN95ijaQUH7pS\x11vebXEyZKnG1', '3TF\x17sLv\x10\x13ei\x07KjUSDO56Ju\x1bV\x03PB\x18HC\x08a21yAocbQ97kW0xpENmltd4\x07Z8rRfX\x1dh\x11qYgM\x04GnzI', 'HBsjVRFD1P3T\x07Ktod\x11yaM\x07Jn\x0eu\tzbgSw95qCf72W6pkYr\x13iE\x04cAmQ\x0bxZ\x16vNUlGO4L\x110I\x16e\x148X', 'SyrM89un\x14lJ6DY\x13\x18x\t\x1cBfhkCipaIGvZ\n5zK1V2qjc\x14XOetUgP70\x14FwW\x10\x10\x0coTmNbERsA3Q\x1dLHd', 'qUZFm\x1a\x12G6pIE\nT\x04v\x19f\x0c0C5\x00z\x06iMWrtXlDwLdPV9Oy\x0e3NAon\x1d8bes\x1aaJHYc1gjSRxQKB24uhk\x16', 'pcaRTFJu1Lh4\x0fzNeHg6viVmb\nM\x0eKPW25wDZ\x19\r3UGOqA\x1b\x02\x06r\x07o\x08ClE98s7x\x0eyYd\x05k0QnIXBSjtf', 'z\x16nrQUaTle0fuZ\x18\x0fLGN8hOXFRYAysE\x0fkJ\x0053Bq4IKb1\x1bCPDdiw\x0ccWg\x0f92m\n\x18x\x086SvoHVtp\x1djM', 'o\n\x14jf3Z7c\x0flBwg4\x0fmdu9\x06W\x08Jr0Kvipy6TNFxIC8\x02tV\x11MLQ\x1anY\x00\x01OUksz\x1bDG1beHEXPq5RaS2A', '1t\x0eso\x1dykB\x0bWCvSwPpbr\x04T4YjmV0hMeXd\x0fi6I\x00xKDcf\x18ulAgn8a\x0f\x1dON5R\x13QJE9LqFHUZ\x04\x03Gz72', 'DItwxnU72\x1e6\x02b8r\x1e\x06HKQiB\x0cPZsOcu\x0bC5RXSLA0oNM\x11\x029JgmzvTh4\x063\x19\x08pFY\x1bVa1dlqjGWeEkf', '\x10BVsurx\x12OAtMX6\x19qmKjHpd3b1\x04f\x07i\x01aoCInLZSNQ9Fl2R\x01\x1a4Jvz0h\x18\x068GP5\x0eeUc\rEWyTDwk7Yg', 'a\x08yQruNhmT\x074WeCMv7\x00K2x\x14oL3GFElnDX\x03\x1d\x03S\x10c\nt9pijfYUI80AqOgR5\x12\x0ezPHV6\x1eBkdwJZ1b', 'NygB\x15A5\x150nZojRPe79YKwu\x14JEXSI1tpivFmxV4\x1d\x1c\x14\x18\nk\x00lOqMWDGLs\x0bfhU8Q\x1e\x0cb2HcrzTaCd6', '\x1c\x18\x021\x074QixUE6ZTtG\x04Rp7vnjAYrB80yNXszeqawL9Oc\x07goHbufCV\x1cP\x1ahMIl\x16F52\x0fKdWkJmD\x11S\n', '\n9\x1dHxQ\x1bqRjo\x0ekz5gZ4VMuFeYb\x18ywN\x1aJrL\x01cXi8KTd1\nW6IDa\x08sphtABEP3\nUv7\x1en0lOCf\x14GS2')
      ''
      0
      'this aint it bruh :wilted_rose:'
      'red'
    Disassembly:
   4            RESUME                   0

   5            LOAD_GLOBAL              0 (password_entry)
                LOAD_ATTR                3 (get + NULL|self)
                CALL                     0
                LOAD_ATTR                5 (strip + NULL|self)
                CALL                     0
                STORE_FAST               0 (flag)

   7            LOAD_GLOBAL              7 (sha256 + NULL)
                LOAD_FAST                0 (flag)
                LOAD_ATTR                9 (encode + NULL|self)
                CALL                     0
                CALL                     1
                LOAD_ATTR               11 (hexdigest + NULL|self)
                CALL                     0
                STORE_FAST               1 (hsh)

   8            LOAD_CONST               1 ('COMPFEST17{')
                LOAD_FAST                0 (flag)
                FORMAT_SIMPLE
                LOAD_CONST               2 ('_')
                LOAD_FAST                1 (hsh)
                LOAD_CONST               0 (None)
                LOAD_CONST               3 (10)
                BINARY_SLICE
                FORMAT_SIMPLE
                LOAD_CONST               4 ('}')
                BUILD_STRING             5
                STORE_FAST               2 (res)

   9            LOAD_GLOBAL             12 (result_label)
                LOAD_ATTR               15 (config + NULL|self)
                LOAD_CONST               5 ('yesss!!! heres your flag: ')
                LOAD_FAST                2 (res)
                FORMAT_SIMPLE
                BUILD_STRING             2
                LOAD_CONST               6 ('lime')
                LOAD_CONST               7 (('text', 'fg'))
                CALL_KW                  2
                POP_TOP

  11            BUILD_MAP                0
                STORE_FAST               3 (var2)

  12            LOAD_CONST               8 ('2sYvjWMlXF73bRUOHeTVnZ8gquP9Dtd0cxEp5raJKoI4SyNA6hfwmiGLBzkQ1C')
                STORE_FAST               4 (charset)

  13            BUILD_LIST               0
                LOAD_CONST               9 (('4LAKsvB\x02\x10tPGYCQVk\x06n2\x1c\x10\x11Zl\x05\x10U\x06ehNjmycuH8Mbz7rFRxoOE\x11fD9aqS5i1Ww\x1eJg36X\x16TpI0', 'gljrHw\x035Dc\x16GTzU49F7IniObX\x01oY\x13m\x14x6aRQWqk\x12M0Z\x16yCK81ePVvd\x04tpAJ\x0cSE\x18LsfhuB\x0e\x1b2N', 'qiW5MbaOEGI\x0flerU\x07oJn\x01\x17kKS3QD\x15hYCVst96FmAd\x0cwLuv\x002xRPX\x19\x13yf\x19\x157j4ZT\x02B1gp8zN0H', 'eTk350Fj\x02OR\x16wYPlxzpU\x17\x121Z\x0bXc84VHrmI2y\x1b\x0faAG\x06LdWNSi\x0fsCDu9M\x12hn\x12gqtKbBv\x1eEQf7J6', 'K\x1bGPaj9\nloF5w8DO\x18qI\x05LiZe\x03v\tR21\x0f\x08YzcCyVp6W\x0ebNXxB3AJkEQSug\x03sM\x07rn\x1dTf4d0Hht7U', 'DrAUWfsoPwnBJQbEzhMYH\x1bTlvG579RS3jcIa\x0f\x0eudO\x0fF\x12eV\x1702\x11CN\x008t\x021mXxLy4\x05qkK\x1b\ri6gZ', '\x15xKDwaU3705Qo8\x1a\x1bgvhBT2VR\x0bINPk\x02\x11JtcG4OCqMj\x0e\x04e9i\x1asflu\x1bYymEdSb\rzXLW\x036HpFAZrn', '87xEb\x11\x0fmQp\rP\x0cGfDg\x18qdy6X4RU01u\x13ztsic\x105n\x0fOv\x0f\x1dkeZFwT9oMCBYVA\x1cr2\x0bHSJjIaW3hKLN', 'wO\t\x14\x17rx5KzD\x04dRvF\x196\x1bMyaAXqfGl1tTs4\x12o78nLBCSVYhJ9UgjNu3cE\x14ZbW\x1aQ20mkHIi\x19p\x1e\x1dP', '6\x08\x16q0oje\x05a9PKYCTb\x0f\x1bO\x045JgfwQi4D\x1b2h3HzvElBZLskxFnd8WIA\x0e\x05MS\x03uRpXmG1VNcy\x19\x1c7tU', '7Mi\x18\x01lqugN\t\x0bVC\x0c\x01KoQ\x18vAH\x0bOB29c1\x1d0hrd\x12jwRTaYXIGUFfmzEL6kS8yne53bPJWDxZ\x0ft\rp4', 'RcVWC\x19\x1cxDd9v7L2kS4\x14f0Im\x1agqst\x15\x10\x0ebBny86rh\x10wl\x1dHOa5NpQjUuKEeTzA1\x0cYXMFP\x1bJoiG3\x00Z', '5ch\x02e\x15I\x04KNrQVu\x00OmYG8F\x13n\x1cdgAED\x1dtpz0fTBWUCS\x07wv9bklyXP\x17RL\x0fMZH3qsa1\x1cxj\x0b672oiJ', 'U\x01P\x14znLCeX\x11kJ6NEv\x1eD\nQfKYow\nidl742c\x05h5Z\x10jMW\x11bS8gyR1qtOGF\nxpT9Bu\x07s3H\x1d0IVmaA', '\x07dwezE8SUaCl\x15bmIWfsLY6vM\x05c\x02tDK\x13nP\x1cOGZ4jhp\x00Xk0Txo\x1byB9RA15F\x00JV\x042qguNr7\x08HiQ\x13', 'AH\x01BgpyC7uT\n24\x17P5KM\x18\x1do36hQV\x02a\x03bvNW9cJzRZIqF\x06\x12EmfY1esX\x0f\x0e8irj\tLwlUnGDdSxkt0O', '9\x19\x070ymL\x14xlvJ\x0fh4\x13ZB8tRHfwpFEeMCo37qdgkQ\x17cWUj1\x11\x1eIzK6X5\x01iaTY\x1brOPNb2SGs\x13\x0cVAuD', '\r1OZ\x01cn\x16Cdfxeo2SFJ9s3iUvzaYX7\x198DhTL\x1bmBGprNAPEMVw5q4kg\nlu\x1dRKyI\r\x05bjWt\x176H\x01Q\x19', 'V\x01R\x13bQo8\n\x060hmdZ\nAKu7N1fP\x03EX\rIsBGxjiM3ary5\x16WqD2\x07zJ9\nvlnwc\x12kYg\x066COeTpHSFUL4', 'csrl\x13P\x1c\x1azJ0\x1aMtRdBuVCFw\x18OW\x0eofYm\x1e\x0b4L\x1b32\x108TAIkx\x19hqg6DN95ijaQUH7pS\x11vebXEyZKnG1', '3TF\x17sLv\x10\x13ei\x07KjUSDO56Ju\x1bV\x03PB\x18HC\x08a21yAocbQ97kW0xpENmltd4\x07Z8rRfX\x1dh\x11qYgM\x04GnzI', 'HBsjVRFD1P3T\x07Ktod\x11yaM\x07Jn\x0eu\tzbgSw95qCf72W6pkYr\x13iE\x04cAmQ\x0bxZ\x16vNUlGO4L\x110I\x16e\x148X', 'SyrM89un\x14lJ6DY\x13\x18x\t\x1cBfhkCipaIGvZ\n5zK1V2qjc\x14XOetUgP70\x14FwW\x10\x10\x0coTmNbERsA3Q\x1dLHd', 'qUZFm\x1a\x12G6pIE\nT\x04v\x19f\x0c0C5\x00z\x06iMWrtXlDwLdPV9Oy\x0e3NAon\x1d8bes\x1aaJHYc1gjSRxQKB24uhk\x16', 'pcaRTFJu1Lh4\x0fzNeHg6viVmb\nM\x0eKPW25wDZ\x19\r3UGOqA\x1b\x02\x06r\x07o\x08ClE98s7x\x0eyYd\x05k0QnIXBSjtf', 'z\x16nrQUaTle0fuZ\x18\x0fLGN8hOXFRYAysE\x0fkJ\x0053Bq4IKb1\x1bCPDdiw\x0ccWg\x0f92m\n\x18x\x086SvoHVtp\x1djM', 'o\n\x14jf3Z7c\x0flBwg4\x0fmdu9\x06W\x08Jr0Kvipy6TNFxIC8\x02tV\x11MLQ\x1anY\x00\x01OUksz\x1bDG1beHEXPq5RaS2A', '1t\x0eso\x1dykB\x0bWCvSwPpbr\x04T4YjmV0hMeXd\x0fi6I\x00xKDcf\x18ulAgn8a\x0f\x1dON5R\x13QJE9LqFHUZ\x04\x03Gz72', 'DItwxnU72\x1e6\x02b8r\x1e\x06HKQiB\x0cPZsOcu\x0bC5RXSLA0oNM\x11\x029JgmzvTh4\x063\x19\x08pFY\x1bVa1dlqjGWeEkf', '\x10BVsurx\x12OAtMX6\x19qmKjHpd3b1\x04f\x07i\x01aoCInLZSNQ9Fl2R\x01\x1a4Jvz0h\x18\x068GP5\x0eeUc\rEWyTDwk7Yg', 'a\x08yQruNhmT\x074WeCMv7\x00K2x\x14oL3GFElnDX\x03\x1d\x03S\x10c\nt9pijfYUI80AqOgR5\x12\x0ezPHV6\x1eBkdwJZ1b', 'NygB\x15A5\x150nZojRPe79YKwu\x14JEXSI1tpivFmxV4\x1d\x1c\x14\x18\nk\x00lOqMWDGLs\x0bfhU8Q\x1e\x0cb2HcrzTaCd6', '\x1c\x18\x021\x074QixUE6ZTtG\x04Rp7vnjAYrB80yNXszeqawL9Oc\x07goHbufCV\x1cP\x1ahMIl\x16F52\x0fKdWkJmD\x11S\n', '\n9\x1dHxQ\x1bqRjo\x0ekz5gZ4VMuFeYb\x18ywN\x1aJrL\x01cXi8KTd1\nW6IDa\x08sphtABEP3\nUv7\x1en0lOCf\x14GS2'))
                LIST_EXTEND              1
                STORE_FAST               5 (fucky)

  16            LOAD_GLOBAL             17 (enumerate + NULL)
                LOAD_FAST                5 (fucky)
                CALL                     1
                GET_ITER
        L1:     FOR_ITER               127 (to L9)
                UNPACK_SEQUENCE          2
                STORE_FAST_STORE_FAST  103 (idx, chunk)

  17            LOAD_FAST                4 (charset)
                STORE_FAST               8 (temp)

  18            LOAD_FAST                7 (chunk)
                GET_ITER
        L2:     FOR_ITER                22 (to L5)
                STORE_FAST               9 (ch)

  19            NOP

  20    L3:     LOAD_FAST                8 (temp)
                LOAD_ATTR               19 (replace + NULL|self)
                LOAD_FAST                9 (ch)
                LOAD_CONST              10 ('')
                CALL                     2
                STORE_FAST               8 (temp)
        L4:     JUMP_BACKWARD           24 (to L2)

  18    L5:     END_FOR
                POP_TOP

  23            LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                0 (flag)
                CALL                     1
                LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                5 (fucky)
                CALL                     1
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_TRUE        46 (to L7)
                LOAD_FAST_LOAD_FAST      6 (flag, idx)
                BINARY_SUBSCR
                LOAD_FAST                8 (temp)
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_FALSE       15 (to L6)
                LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                8 (temp)
                CALL                     1
                LOAD_CONST              11 (0)
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_TRUE        23 (to L7)
        L6:     LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                8 (temp)
                CALL                     1
                LOAD_CONST              11 (0)
                COMPARE_OP              88 (bool(==))
                POP_JUMP_IF_FALSE       30 (to L8)
                LOAD_FAST_LOAD_FAST      6 (flag, idx)
                BINARY_SUBSCR
                LOAD_CONST               2 ('_')
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_FALSE       22 (to L8)

  24    L7:     LOAD_GLOBAL             12 (result_label)
                LOAD_ATTR               15 (config + NULL|self)
                LOAD_CONST              12 ('this aint it bruh :wilted_rose:')
                LOAD_CONST              13 ('red')
                LOAD_CONST               7 (('text', 'fg'))
                CALL_KW                  2
                POP_TOP

  25            POP_TOP
                RETURN_CONST             0 (None)

  27    L8:     JUMP_BACKWARD          129 (to L1)

  16    L9:     END_FOR
                POP_TOP
                RETURN_CONST             0 (None)

  --   L10:     PUSH_EXC_INFO

  21            POP_TOP

  22   L11:     POP_EXCEPT
                JUMP_BACKWARD          128 (to L2)

  --   L12:     COPY                     3
                POP_EXCEPT
                RERAISE                  1
ExceptionTable:
  L3 to L4 -> L10 [2]
  L10 to L11 -> L12 [3] lasti

  'sneaky snek'
  '800x400'
  '#1e1e1e'
  ('bg',)
  'Whatssss the passsssword?'
  'lime'
  ('Arial', 24, 'bold')
  ('text', 'fg', 'bg', 'font')
  (20, 5)
  ('pady',)
  50
  '#2e2e2e'
  ('Arial', 15)
  ('width', 'fg', 'bg', 'insertbackground', 'font')
  5
  'Submit'
  'black'
  ('Arial', 10, 'bold')
  '#90ee90'
  'flat'
  ('text', 'command', 'fg', 'bg', 'font', 'activebackground', 'relief')
  10
  ''
Disassembly:
  0           RESUME                   0

  1           LOAD_CONST               0 (0)
              LOAD_CONST               1 (('sha256',))
              IMPORT_NAME              0 (hashlib)
              IMPORT_FROM              1 (sha256)
              STORE_NAME               1 (sha256)
              POP_TOP

  2           LOAD_CONST               0 (0)
              LOAD_CONST               2 (None)
              IMPORT_NAME              2 (tkinter)
              STORE_NAME               3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)

  4           LOAD_CONST               3 (<code object check at 0x16bb0a80, file "source.py", line 4>)
              MAKE_FUNCTION
              STORE_NAME               4 (ۇw?Ȩ:# ڿvjvdY>Kİ䬘T8Ԗfןgَ诒A*W?覌EUȁệQc}{Y`W\ŭbʂߘ*ݧ䳢Pৗ񝊓þ0.ņ矜(HUiT@0,ɚ'MnOtFC3/vk%JO!q@)

 29           LOAD_NAME                3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)
              LOAD_ATTR               10 (Tk)
              PUSH_NULL
              CALL                     0
              STORE_NAME               6 (root)

 30           LOAD_NAME                6 (root)
              LOAD_ATTR               15 (title + NULL|self)
              LOAD_CONST               4 ('sneaky snek')
              CALL                     1
              POP_TOP

 31           LOAD_NAME                6 (root)
              LOAD_ATTR               17 (geometry + NULL|self)
              LOAD_CONST               5 ('800x400')
              CALL                     1
              POP_TOP

 32           LOAD_NAME                6 (root)
              LOAD_ATTR               19 (configure + NULL|self)
              LOAD_CONST               6 ('#1e1e1e')
              LOAD_CONST               7 (('bg',))
              CALL_KW                  1
              POP_TOP

 34           LOAD_NAME                3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)
              LOAD_ATTR               20 (Label)
              PUSH_NULL
              LOAD_NAME                6 (root)
              LOAD_CONST               8 ('Whatssss the passsssword?')
              LOAD_CONST               9 ('lime')
              LOAD_CONST               6 ('#1e1e1e')
              LOAD_CONST              10 (('Arial', 24, 'bold'))
              LOAD_CONST              11 (('text', 'fg', 'bg', 'font'))
              CALL_KW                  5
              STORE_NAME              11 (X ݺnO!ĺt.̍!z׀g Sj +Ţo}E̏7$zPJ䦳퐾˦Ɏn͘Mc˽q(ŋ9򍔫Ʀ1넚gh*J3ȯ+W̥GGN˾5yP+uîϦTT?OGךؒ2禋O$OQ̰)

 35           LOAD_NAME               11 (X ݺnO!ĺt.̍!z׀g Sj +Ţo}E̏7$zPJ䦳퐾˦Ɏn͘Mc˽q(ŋ9򍔫Ʀ1넚gh*J3ȯ+W̥GGN˾5yP+uîϦTT?OGךؒ2禋O$OQ̰)
              LOAD_ATTR               25 (pack + NULL|self)
              LOAD_CONST              12 ((20, 5))
              LOAD_CONST              13 (('pady',))
              CALL_KW                  1
              POP_TOP

 36           LOAD_NAME                3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)
              LOAD_ATTR               26 (Entry)
              PUSH_NULL
              LOAD_NAME                6 (root)
              LOAD_CONST              14 (50)
              LOAD_CONST               9 ('lime')
              LOAD_CONST              15 ('#2e2e2e')
              LOAD_CONST               9 ('lime')
              LOAD_CONST              16 (('Arial', 15))
              LOAD_CONST              17 (('width', 'fg', 'bg', 'insertbackground', 'font'))
              CALL_KW                  6
              STORE_NAME              14 (password_entry)

 37           LOAD_NAME               14 (password_entry)
              LOAD_ATTR               25 (pack + NULL|self)
              LOAD_CONST              18 (5)
              LOAD_CONST              13 (('pady',))
              CALL_KW                  1
              POP_TOP

 38           LOAD_NAME                3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)
              LOAD_ATTR               30 (Button)
              PUSH_NULL
              LOAD_NAME                6 (root)
              LOAD_CONST              19 ('Submit')
              LOAD_NAME                4 (ۇw?Ȩ:# ڿvjvdY>Kİ䬘T8Ԗfןgَ诒A*W?覌EUȁệQc}{Y`W\ŭbʂߘ*ݧ䳢Pৗ񝊓þ0.ņ矜(HUiT@0,ɚ'MnOtFC3/vk%JO!q@)
              LOAD_CONST              20 ('black')
              LOAD_CONST               9 ('lime')
              LOAD_CONST              21 (('Arial', 10, 'bold'))
              LOAD_CONST              22 ('#90ee90')
              LOAD_CONST              23 ('flat')
              LOAD_CONST              24 (('text', 'command', 'fg', 'bg', 'font', 'activebackground', 'relief'))
              CALL_KW                  8
              STORE_NAME              16 (CʒE^R칖XYӯϮM򀸯x%PBÒ/d^ޮ<()fʮU$5B@􈃌a݃A\),'̪қ|_#ʮ8JɎڽ&͍拍GBl[r鏪Gkeݪm>^lΤ'E𣕻2aҝ鄧8ɗրNj-ো)

 39           LOAD_NAME               16 (CʒE^R칖XYӯϮM򀸯x%PBÒ/d^ޮ<()fʮU$5B@􈃌a݃A\),'̪қ|_#ʮ8JɎڽ&͍拍GBl[r鏪Gkeݪm>^lΤ'E𣕻2aҝ鄧8ɗրNj-ো)
              LOAD_ATTR               25 (pack + NULL|self)
              LOAD_CONST              25 (10)
              LOAD_CONST              13 (('pady',))
              CALL_KW                  1
              POP_TOP

 40           LOAD_NAME                3 (*􆠭(STѢ ཉ=eD/7Ҍ欗em늤粪E?󂂿2ʊ?oHk <녯8U-_P=կ鶄鱣 ᩬ-ʦ򺱧ź>Ό-𪶠`ǒ;Y{ܥ1%F=ɰ񧟝cꈇ7ҍ֙ۮ鎁*Èނ̉x򩀶ʣ۾ȤeOmw3jr&9y)
              LOAD_ATTR               20 (Label)
              PUSH_NULL
              LOAD_NAME                6 (root)
              LOAD_CONST              26 ('')
              LOAD_CONST               9 ('lime')
              LOAD_CONST               6 ('#1e1e1e')
              LOAD_CONST              21 (('Arial', 10, 'bold'))
              LOAD_CONST              11 (('text', 'fg', 'bg', 'font'))
              CALL_KW                  5
              STORE_NAME              17 (result_label)

 41           LOAD_NAME               17 (result_label)
              LOAD_ATTR               25 (pack + NULL|self)
              CALL                     0
              POP_TOP

 42           LOAD_NAME                6 (root)
              LOAD_ATTR               37 (mainloop + NULL|self)
              CALL                     0
              POP_TOP
              RETURN_CONST             2 (None)

Disassembly of <code object check at 0x16bb0a80, file "source.py", line 4>:
   4            RESUME                   0

   5            LOAD_GLOBAL              0 (password_entry)
                LOAD_ATTR                3 (get + NULL|self)
                CALL                     0
                LOAD_ATTR                5 (strip + NULL|self)
                CALL                     0
                STORE_FAST               0 (flag)

   7            LOAD_GLOBAL              7 (sha256 + NULL)
                LOAD_FAST                0 (flag)
                LOAD_ATTR                9 (encode + NULL|self)
                CALL                     0
                CALL                     1
                LOAD_ATTR               11 (hexdigest + NULL|self)
                CALL                     0
                STORE_FAST               1 (hsh)

   8            LOAD_CONST               1 ('COMPFEST17{')
                LOAD_FAST                0 (flag)
                FORMAT_SIMPLE
                LOAD_CONST               2 ('_')
                LOAD_FAST                1 (hsh)
                LOAD_CONST               0 (None)
                LOAD_CONST               3 (10)
                BINARY_SLICE
                FORMAT_SIMPLE
                LOAD_CONST               4 ('}')
                BUILD_STRING             5
                STORE_FAST               2 (res)

   9            LOAD_GLOBAL             12 (result_label)
                LOAD_ATTR               15 (config + NULL|self)
                LOAD_CONST               5 ('yesss!!! heres your flag: ')
                LOAD_FAST                2 (res)
                FORMAT_SIMPLE
                BUILD_STRING             2
                LOAD_CONST               6 ('lime')
                LOAD_CONST               7 (('text', 'fg'))
                CALL_KW                  2
                POP_TOP

  11            BUILD_MAP                0
                STORE_FAST               3 (var2)

  12            LOAD_CONST               8 ('2sYvjWMlXF73bRUOHeTVnZ8gquP9Dtd0cxEp5raJKoI4SyNA6hfwmiGLBzkQ1C')
                STORE_FAST               4 (charset)

  13            BUILD_LIST               0
                LOAD_CONST               9 (('4LAKsvB\x02\x10tPGYCQVk\x06n2\x1c\x10\x11Zl\x05\x10U\x06ehNjmycuH8Mbz7rFRxoOE\x11fD9aqS5i1Ww\x1eJg36X\x16TpI0', 'gljrHw\x035Dc\x16GTzU49F7IniObX\x01oY\x13m\x14x6aRQWqk\x12M0Z\x16yCK81ePVvd\x04tpAJ\x0cSE\x18LsfhuB\x0e\x1b2N', 'qiW5MbaOEGI\x0flerU\x07oJn\x01\x17kKS3QD\x15hYCVst96FmAd\x0cwLuv\x002xRPX\x19\x13yf\x19\x157j4ZT\x02B1gp8zN0H', 'eTk350Fj\x02OR\x16wYPlxzpU\x17\x121Z\x0bXc84VHrmI2y\x1b\x0faAG\x06LdWNSi\x0fsCDu9M\x12hn\x12gqtKbBv\x1eEQf7J6', 'K\x1bGPaj9\nloF5w8DO\x18qI\x05LiZe\x03v\tR21\x0f\x08YzcCyVp6W\x0ebNXxB3AJkEQSug\x03sM\x07rn\x1dTf4d0Hht7U', 'DrAUWfsoPwnBJQbEzhMYH\x1bTlvG579RS3jcIa\x0f\x0eudO\x0fF\x12eV\x1702\x11CN\x008t\x021mXxLy4\x05qkK\x1b\ri6gZ', '\x15xKDwaU3705Qo8\x1a\x1bgvhBT2VR\x0bINPk\x02\x11JtcG4OCqMj\x0e\x04e9i\x1asflu\x1bYymEdSb\rzXLW\x036HpFAZrn', '87xEb\x11\x0fmQp\rP\x0cGfDg\x18qdy6X4RU01u\x13ztsic\x105n\x0fOv\x0f\x1dkeZFwT9oMCBYVA\x1cr2\x0bHSJjIaW3hKLN', 'wO\t\x14\x17rx5KzD\x04dRvF\x196\x1bMyaAXqfGl1tTs4\x12o78nLBCSVYhJ9UgjNu3cE\x14ZbW\x1aQ20mkHIi\x19p\x1e\x1dP', '6\x08\x16q0oje\x05a9PKYCTb\x0f\x1bO\x045JgfwQi4D\x1b2h3HzvElBZLskxFnd8WIA\x0e\x05MS\x03uRpXmG1VNcy\x19\x1c7tU', '7Mi\x18\x01lqugN\t\x0bVC\x0c\x01KoQ\x18vAH\x0bOB29c1\x1d0hrd\x12jwRTaYXIGUFfmzEL6kS8yne53bPJWDxZ\x0ft\rp4', 'RcVWC\x19\x1cxDd9v7L2kS4\x14f0Im\x1agqst\x15\x10\x0ebBny86rh\x10wl\x1dHOa5NpQjUuKEeTzA1\x0cYXMFP\x1bJoiG3\x00Z', '5ch\x02e\x15I\x04KNrQVu\x00OmYG8F\x13n\x1cdgAED\x1dtpz0fTBWUCS\x07wv9bklyXP\x17RL\x0fMZH3qsa1\x1cxj\x0b672oiJ', 'U\x01P\x14znLCeX\x11kJ6NEv\x1eD\nQfKYow\nidl742c\x05h5Z\x10jMW\x11bS8gyR1qtOGF\nxpT9Bu\x07s3H\x1d0IVmaA', '\x07dwezE8SUaCl\x15bmIWfsLY6vM\x05c\x02tDK\x13nP\x1cOGZ4jhp\x00Xk0Txo\x1byB9RA15F\x00JV\x042qguNr7\x08HiQ\x13', 'AH\x01BgpyC7uT\n24\x17P5KM\x18\x1do36hQV\x02a\x03bvNW9cJzRZIqF\x06\x12EmfY1esX\x0f\x0e8irj\tLwlUnGDdSxkt0O', '9\x19\x070ymL\x14xlvJ\x0fh4\x13ZB8tRHfwpFEeMCo37qdgkQ\x17cWUj1\x11\x1eIzK6X5\x01iaTY\x1brOPNb2SGs\x13\x0cVAuD', '\r1OZ\x01cn\x16Cdfxeo2SFJ9s3iUvzaYX7\x198DhTL\x1bmBGprNAPEMVw5q4kg\nlu\x1dRKyI\r\x05bjWt\x176H\x01Q\x19', 'V\x01R\x13bQo8\n\x060hmdZ\nAKu7N1fP\x03EX\rIsBGxjiM3ary5\x16WqD2\x07zJ9\nvlnwc\x12kYg\x066COeTpHSFUL4', 'csrl\x13P\x1c\x1azJ0\x1aMtRdBuVCFw\x18OW\x0eofYm\x1e\x0b4L\x1b32\x108TAIkx\x19hqg6DN95ijaQUH7pS\x11vebXEyZKnG1', '3TF\x17sLv\x10\x13ei\x07KjUSDO56Ju\x1bV\x03PB\x18HC\x08a21yAocbQ97kW0xpENmltd4\x07Z8rRfX\x1dh\x11qYgM\x04GnzI', 'HBsjVRFD1P3T\x07Ktod\x11yaM\x07Jn\x0eu\tzbgSw95qCf72W6pkYr\x13iE\x04cAmQ\x0bxZ\x16vNUlGO4L\x110I\x16e\x148X', 'SyrM89un\x14lJ6DY\x13\x18x\t\x1cBfhkCipaIGvZ\n5zK1V2qjc\x14XOetUgP70\x14FwW\x10\x10\x0coTmNbERsA3Q\x1dLHd', 'qUZFm\x1a\x12G6pIE\nT\x04v\x19f\x0c0C5\x00z\x06iMWrtXlDwLdPV9Oy\x0e3NAon\x1d8bes\x1aaJHYc1gjSRxQKB24uhk\x16', 'pcaRTFJu1Lh4\x0fzNeHg6viVmb\nM\x0eKPW25wDZ\x19\r3UGOqA\x1b\x02\x06r\x07o\x08ClE98s7x\x0eyYd\x05k0QnIXBSjtf', 'z\x16nrQUaTle0fuZ\x18\x0fLGN8hOXFRYAysE\x0fkJ\x0053Bq4IKb1\x1bCPDdiw\x0ccWg\x0f92m\n\x18x\x086SvoHVtp\x1djM', 'o\n\x14jf3Z7c\x0flBwg4\x0fmdu9\x06W\x08Jr0Kvipy6TNFxIC8\x02tV\x11MLQ\x1anY\x00\x01OUksz\x1bDG1beHEXPq5RaS2A', '1t\x0eso\x1dykB\x0bWCvSwPpbr\x04T4YjmV0hMeXd\x0fi6I\x00xKDcf\x18ulAgn8a\x0f\x1dON5R\x13QJE9LqFHUZ\x04\x03Gz72', 'DItwxnU72\x1e6\x02b8r\x1e\x06HKQiB\x0cPZsOcu\x0bC5RXSLA0oNM\x11\x029JgmzvTh4\x063\x19\x08pFY\x1bVa1dlqjGWeEkf', '\x10BVsurx\x12OAtMX6\x19qmKjHpd3b1\x04f\x07i\x01aoCInLZSNQ9Fl2R\x01\x1a4Jvz0h\x18\x068GP5\x0eeUc\rEWyTDwk7Yg', 'a\x08yQruNhmT\x074WeCMv7\x00K2x\x14oL3GFElnDX\x03\x1d\x03S\x10c\nt9pijfYUI80AqOgR5\x12\x0ezPHV6\x1eBkdwJZ1b', 'NygB\x15A5\x150nZojRPe79YKwu\x14JEXSI1tpivFmxV4\x1d\x1c\x14\x18\nk\x00lOqMWDGLs\x0bfhU8Q\x1e\x0cb2HcrzTaCd6', '\x1c\x18\x021\x074QixUE6ZTtG\x04Rp7vnjAYrB80yNXszeqawL9Oc\x07goHbufCV\x1cP\x1ahMIl\x16F52\x0fKdWkJmD\x11S\n', '\n9\x1dHxQ\x1bqRjo\x0ekz5gZ4VMuFeYb\x18ywN\x1aJrL\x01cXi8KTd1\nW6IDa\x08sphtABEP3\nUv7\x1en0lOCf\x14GS2'))
                LIST_EXTEND              1
                STORE_FAST               5 (fucky)

  16            LOAD_GLOBAL             17 (enumerate + NULL)
                LOAD_FAST                5 (fucky)
                CALL                     1
                GET_ITER
        L1:     FOR_ITER               127 (to L9)
                UNPACK_SEQUENCE          2
                STORE_FAST_STORE_FAST  103 (idx, chunk)

  17            LOAD_FAST                4 (charset)
                STORE_FAST               8 (temp)

  18            LOAD_FAST                7 (chunk)
                GET_ITER
        L2:     FOR_ITER                22 (to L5)
                STORE_FAST               9 (ch)

  19            NOP

  20    L3:     LOAD_FAST                8 (temp)
                LOAD_ATTR               19 (replace + NULL|self)
                LOAD_FAST                9 (ch)
                LOAD_CONST              10 ('')
                CALL                     2
                STORE_FAST               8 (temp)
        L4:     JUMP_BACKWARD           24 (to L2)

  18    L5:     END_FOR
                POP_TOP

  23            LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                0 (flag)
                CALL                     1
                LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                5 (fucky)
                CALL                     1
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_TRUE        46 (to L7)
                LOAD_FAST_LOAD_FAST      6 (flag, idx)
                BINARY_SUBSCR
                LOAD_FAST                8 (temp)
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_FALSE       15 (to L6)
                LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                8 (temp)
                CALL                     1
                LOAD_CONST              11 (0)
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_TRUE        23 (to L7)
        L6:     LOAD_GLOBAL             21 (len + NULL)
                LOAD_FAST                8 (temp)
                CALL                     1
                LOAD_CONST              11 (0)
                COMPARE_OP              88 (bool(==))
                POP_JUMP_IF_FALSE       30 (to L8)
                LOAD_FAST_LOAD_FAST      6 (flag, idx)
                BINARY_SUBSCR
                LOAD_CONST               2 ('_')
                COMPARE_OP             119 (bool(!=))
                POP_JUMP_IF_FALSE       22 (to L8)

  24    L7:     LOAD_GLOBAL             12 (result_label)
                LOAD_ATTR               15 (config + NULL|self)
                LOAD_CONST              12 ('this aint it bruh :wilted_rose:')
                LOAD_CONST              13 ('red')
                LOAD_CONST               7 (('text', 'fg'))
                CALL_KW                  2
                POP_TOP

  25            POP_TOP
                RETURN_CONST             0 (None)

  27    L8:     JUMP_BACKWARD          129 (to L1)

  16    L9:     END_FOR
                POP_TOP
                RETURN_CONST             0 (None)

  --   L10:     PUSH_EXC_INFO

  21            POP_TOP

  22   L11:     POP_EXCEPT
                JUMP_BACKWARD          128 (to L2)

  --   L12:     COPY                     3
                POP_EXCEPT
                RERAISE                  1
ExceptionTable:
  L3 to L4 -> L10 [2]
  L10 to L11 -> L12 [3] lasti

